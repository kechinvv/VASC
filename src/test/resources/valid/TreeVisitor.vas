class Main is
    this() is
        var E : Node = Node()
        var tree : PlusNode =
            PlusNode(1,
                PlusNode(2,
                    MinusNode(3, E, E),
                    PlusNode(4, E,
                        PlusNode(5, E, E)
                    )
                ),
                MinusNode(6,
                    PlusNode(7, E, E),
                    E
                )
            )
        //         1
        //       /   \
        //      2    -6
        //     / \   /
        //    -3  4 7
        //         \
        //          5
        var v : Visitor = Visitor()
        tree.accept(v)
        var res : Integer = v.res
        println("$res") // 10
    end
end

class Visitor is
    var res : Integer = 0

    this() is
    end

    method visit(node : Node) is
    end

    method visit(node : PlusNode) is
        res = res.plus(node.value)
        node.left.accept(this)
        node.right.accept(this)
    end

    method visit(node : MinusNode) is
        res = res.minus(node.value)
        node.left.accept(this)
        node.right.accept(this)
    end
end

class Node is // empty node
    this() is
    end

    method accept(v : Visitor) is
    end
end

class PlusNode extends Node is
    var value : Integer
    var left  : Node
    var right : Node

    this(_value : Integer, _left : Node, _right : Node) is
        value = _value
        left  = _left
        right = _right
    end

    method accept(v : Visitor) is
        v.visit(this)
    end
end

class MinusNode extends PlusNode is
    this(_value : Integer, _left : Node, _right : Node) is
        super(_value, _left, _right)
    end

    method accept(v : Visitor) is
        v.visit(this)
    end
end
