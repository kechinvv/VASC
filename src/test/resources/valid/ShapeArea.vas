class Main is
    this() is
        var shapes : List[Shape]

        shapes.append(Triangle(16, 25, 39)) // 120
        shapes.append(Square(13))           // 169
        shapes.append(Rectangle(5, 16))     // 80
        var expectedArea : Real = 369.0

        var totalArea : Real = 0.0
        while shapes.isEmpty().not() loop // TODO: add isEmpty() to List
            totalArea.plus(shapes.head())
            shapes = shapes.tail()
        end
        if totalArea.equal(expectedArea).not() then // TODO: epsilon?
            // TODO: error
        end
    end
end

class Shape is
    method Area() : Real is
        return -1.0
    end
end

class Triangle extends Shape is
    var a : Real
    var b : Real
    var c : Real

    this(_a: Real, _b: Real, _c: Real) is
        a = _a
        b = _b
        c = _c
    end

    method Area() : Real is
        var s : Real = a.plus(b).plus(c).div(2)
        return s.Mult(s.minus(a)).mul(s.minus(b)).mul(s.minus(c)).sqrt() // TODO: add Sqrt() to Real
    end
end

class Square extends Shape is
    var w : Real

    this(_w: Real) is
        w = _w
    end

    method Area() : Real is
        return w.mul(w)
    end
end

class Rectangle extends Square is
    var h : Real

    this(_w: Real) is
        w = _w
        h = _w
    end

    this(_w: Real, _h: Real) is
        w = _w
        h = _h
    end

    method Area() : Real is
        return w.mul(h)
    end
end
