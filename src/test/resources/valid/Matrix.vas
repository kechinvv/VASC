class Main is
    this() is
        var a : Matrix = Matrix(4, 3)
        // 00 10 20 30
        // 01 11 21 31
        // 02 12 22 32
        var b : Matrix = Matrix(2, 4)
        // 00 10
        // 01 11
        // 02 12
        // 03 13
        var c : Matrix = Matrix(1, 2)
        // 00
        // 01

        // aaaa   bb   dd   c   r
        // aaaa * bb = dd * c = r
        // aaaa   bb   dd       r
        //        bb
        var d : Matrix = a.mul(b)
        var r : Matrix = d.mul(c)
        // 740
        // 786
        // 832

        if r.at(0, 0).equal(740).and(r.at(0, 1).equal(786)).and(r.at(0, 2).equal(832)).not() then
            // TODO: error
        end
    end
end

class Matrix is
    var w : Integer
    var h : Integer

    var data : Array[Array[Integer]]

    this(_w : Integer, _h : Integer) is
        w = _w
        h = _h

        data = Array[Array[Integer]](w)
        var x : Integer = 0
        while x.less(w) loop
            var col : Array[Integer] = Array[Integer](h)
            var y : Integer = 0
            while y.less(h) loop
                col.set(y, Integer(10).mul(x).plus(y)) // e.g. value of cell (4, 2) is 42
                y = y.plus(1)
            end
            x = x.plus(1)
        end
    end

    // TODO: test Add?
    method add(m : Matrix) : Matrix is
        var res : Matrix = Matrix(w, h)
        var x : Integer = 0
        while x.less(w) loop
            var y : Integer = 0
            while y.less(h) loop
                res.update(x, y, this.at(x, y).plus(m.at(x, y)))
                y = y.plus(1)
            end
            x = x.plus(1)
        end
        return res
    end

    method mul(m : Matrix) : Matrix is
        var newW : Integer = m.w
        var newH : Integer = h
        var res : Matrix = Matrix(newW, newH)
        var x : Integer = 0
        while x.less(newW) loop
            var y : Integer = 0
            while y.less(newH) loop
                res.update(x, y, mulMatrixCell(m, x, y))
                y = y.plus(1)
            end
            x = x.plus(1)
        end
    end

    method mulMatrixCell(m : Matrix, x : Integer, y : Integer) : Integer is
        var res : Integer = 0
        var off : Integer = 0
        while off.less(w) loop
            res = res.plus(at(x.plus(off), y).mul(at(x, y.plus(off))))
            off = off.plus(1)
        end
        return res
    end

    method at(x : Integer, y : Integer) : Integer is
        return data.get(x).get(y)
    end

    method update(x : Integer, y : Integer, v : Integer) is
        data.get(x).set(y, v)
    end
end