// https://rosettacode.org/wiki/Find_the_intersection_of_two_lines#Java

class Main is
    this() is
        var l1 : Line = Line(Point(4.0, 0.0), Point(6.0, 10.0))
        var l2 : Line = Line(Point(0.0, 3.0), Point(10.0, 7.0))
        var o : Option = l1.findIntersection(l2)

        if o.ok then
            var x : Real = o.value.x
            var y : Real = o.value.y
            println("$x") // 5.0
            println("$y") // 5.0
        else
            println("error: no intersection")
        end

        l1 = Line(Point(0.0, 0.0), Point(1.0, 1.0))
        l2 = Line(Point(1.0, 2.0), Point(4.0, 5.0))
        o = l1.findIntersection(l2)
        if o.ok then
            println("error: found intersection at")
            var x : Real = o.value.x
            var y : Real = o.value.y
            println("$x")
            println("$y")
        else
            println("no intersection")
        end
    end
end

class Option is
    var value : Point
    var ok : Boolean

    this(_value : Point, _ok : Boolean) is
        value = _value
        ok = _ok
    end
end

class Point is
    var x : Real
    var y : Real

    this(_x : Real, _y : Real) is
        x = _x
        y = _y
    end
end

class Line is
    var s : Point
    var e : Point

    this(_s : Point, _e : Point) is
        s = _s
        e = _e
    end

    method findIntersection(other : Line) : Option is
        var a1 : Real = e.y.minus(s.y)
        var b1 : Real = s.x.minus(e.x)
        var c1 : Real = a1.mul(s.x).plus(b1.mul(s.y))

        var a2 : Real = other.e.y.minus(other.s.y)
        var b2 : Real = other.s.x.minus(other.e.x)
        var c2 : Real = a2.mul(other.s.x).plus(b2.mul(other.s.y))

        var delta : Real = a1.mul(b2).minus(a2.mul(b1))
        if delta.equal(0) then
            return Option(Point(0.0, 0.0), false)
        else
            return Option(Point(b2.mul(c1).minus(b1.mul(c2)).div(delta), a1.mul(c2).minus(a2.mul(c1)).div(delta)), true)
        end
    end
end
