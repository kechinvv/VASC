// https://rosettacode.org/wiki/Find_the_intersection_of_a_line_with_a_plane#Java

// Find the point of intersection for
// the infinite ray with direction (0, -1, -1)
// passing through position (0, 0, 10)
// with the infinite plane with a normal vector of (0, 0, 1)
// and which passes through [0, 0, 5].

// The ray intersects the plane at (0, -5, 5)

class Main is
    this() is
        var rayVector : Vector3 = Vector3(0.0, -1.0, -1.0)
        var rayPoint : Vector3 = Vector3(0.0, 0.0, 10.0)
        var planeNormal : Vector3 = Vector3(0.0, 0.0, 1.0)
        var planePoint : Vector3 = Vector3(0.0, 0.0, 5.0)

        var diff : Vector3 = rayPoint.minus(planePoint)
        var prod1 : Real = diff.dot(planeNormal)
        var prod2 : Real = rayVector.dot(planeNormal)
        var prod3 : Real = prod1.Div(prod2)
        var res : Real = rayPoint.minus(rayVector.times(prod3))

        if res.x.Equal(0.0).And(res.y.Equal(-5.0)).And(res.z.Equal(5.0)).Not() then // TODO: EPS?
            // TODO: error
        end
    end
end

class Vector3 is
    var x : Real = 0.0
    var y : Real = 0.0
    var z : Real = 0.0

    this(_x : Real, _y : Real, _z : Real) is
        x = _x // TODO: use this?
        y = _y
        z = _z
    end

    method Plus(v : Vector3) : Vector3 is
        return Vector3(x.Plus(v.x), y.Plus(v.y), z.Plus(v.z))
    end

    method Minus(v : Vector3) : Vector3 is
        return Vector3(x.Minus(v.x), y.Minus(v.y), z.Minus(v.z))
    end

    method Times(s : Real) : Vector3 is
        return Vector3(s.Mult(x), s.Mult(y), s.Mult(z))
    end

    method Dot(v : Vector3D) : Real is
        return x.Mult(v.x).Plus(y.Mult(v.y)).Plus(z.Mult(v.z))
    end
end