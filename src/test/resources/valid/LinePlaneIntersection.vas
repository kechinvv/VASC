// https://rosettacode.org/wiki/Find_the_intersection_of_a_line_with_a_plane#Java

// Find the point of intersection for
// the infinite ray with direction (0, -1, -1)
// passing through position (0, 0, 10)
// with the infinite plane with a normal vector of (0, 0, 1)
// and which passes through [0, 0, 5].

// The ray intersects the plane at (0, -5, 5)

class Main is
    this() is
        var rayVector : Vector3 = Vector3(0.0, -1.0, -1.0)
        var rayPoint : Vector3 = Vector3(0.0, 0.0, 10.0)
        var planeNormal : Vector3 = Vector3(0.0, 0.0, 1.0)
        var planePoint : Vector3 = Vector3(0.0, 0.0, 5.0)

        var diff : Vector3 = rayPoint.minus(planePoint)
        var prod1 : Real = diff.dot(planeNormal)
        var prod2 : Real = rayVector.dot(planeNormal)
        var prod3 : Real = prod1.div(prod2)
        var res : Vector3 = rayPoint.minus(rayVector.times(prod3))

        var x : Real = res.x
        var y : Real = res.y
        var z : Real = res.z

        println("$x")
        println("$y")
        println("$z")
    end
end

class Vector3 is
    var x : Real = 0.0
    var y : Real = 0.0
    var z : Real = 0.0

    this(_x : Real, _y : Real, _z : Real) is
        x = _x
        y = _y
        z = _z
    end

    method plus(v : Vector3) : Vector3 is
        return Vector3(x.plus(v.x), y.plus(v.y), z.plus(v.z))
    end

    method minus(v : Vector3) : Vector3 is
        return Vector3(x.minus(v.x), y.minus(v.y), z.minus(v.z))
    end

    method times(s : Real) : Vector3 is
        return Vector3(s.mul(x), s.mul(y), s.mul(z))
    end

    method dot(v : Vector3) : Real is
        return x.mul(v.x).plus(y.mul(v.y)).plus(z.mul(v.z))
    end
end